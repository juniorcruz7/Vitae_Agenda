#include <iostream>
#include <string>
#include <vector>
#include <fstream>

using namespace std;

class Agenda {
public:

    vector<string> agenda[12][30];
    vector<string> disponibilidade = {"Disponivel", "Disponivel", "Disponivel", "Disponivel", "Disponivel", "Disponivel"};
    vector<string> horas = {"12:00 as 13:00", "13:00 as 14:00", "14:00 as 15:00", "15:00 as 16:00", "16:00 as 17:00", "17:00 as 18:00"};

    // Inicializa tudo como disponível
    void atribuicao_padrao() {
        for (int m = 0; m < 12; m++) {
            for (int d = 0; d < 30; d++) {
                agenda[m][d] = disponibilidade;
            }
        }
    }

    // =====================
    // SALVAR EM ARQUIVO
    // =====================
    void salvar_em_arquivo() {
        ofstream arquivo("agenda.txt");
        if (!arquivo.is_open()) {
            cout << "Erro ao abrir arquivo para salvar!\n";
            return;
        }

        for (int m = 0; m < 12; m++) {
            for (int d = 0; d < 30; d++) {
                arquivo << "Mes " << (m + 1) << " Dia " << (d + 1) << " ";
                for (int h = 0; h < 6; h++) {
                    arquivo << agenda[m][d][h];
                    if (h < 5) arquivo << ",";
                }
                arquivo << "\n";
            }
        }

        arquivo.close();
    }

    // =====================
    // CARREGAR DE ARQUIVO
    // =====================
    void carregar_de_arquivo() {
        ifstream arquivo("agenda.txt");
        if (!arquivo.is_open()) {
            // Se não existir o arquivo ainda, cria um do zero
            atribuicao_padrao();
            salvar_em_arquivo();
            return;
        }

        string lixo;
        int m, d;
        while (arquivo >> lixo >> m >> lixo >> d) {
            string linha;
            getline(arquivo, linha); // lê o resto da linha com os status

            vector<string> estados;
            string atual = "";
            for (char c : linha) {
                if (c == ',' || c == ' ') {
                    if (!atual.empty()) {
                        estados.push_back(atual);
                        atual.clear();
                    }
                } else {
                    atual += c;
                }
            }
            if (!atual.empty()) estados.push_back(atual);

            if (estados.size() == 6)
                agenda[m - 1][d - 1] = estados;
        }

        arquivo.close();
    }

    // Mostrar e alterar horários
    void horarios(int i_m, int i_d) {
        int indice_mes = i_m - 1;
        int indice_dia = i_d - 1;

        cout << "\nHorarios de " << i_d << "/" << i_m << ":\n";
        for (int i = 0; i < 6; i++) {
            cout << "[" << i + 1 << "] " << horas[i] << ": " << agenda[indice_mes][indice_dia][i] << "\n";
        }

        int alterar;
        cout << "\nDigite o número do horário que deseja alterar: ";
        cin >> alterar;
        alterar--;

        if (alterar < 0 || alterar >= 6) {
            cout << "Horário inválido!\n";
            return;
        }

        int marcar;
        cout << "Digite o número referente à disponibilidade:\n";
        cout << "[1] Disponivel\n[2] Indisponivel\n";
        cin >> marcar;

        if (marcar == 1)
            agenda[indice_mes][indice_dia][alterar] = "Disponivel";
        else
            agenda[indice_mes][indice_dia][alterar] = "Indisponivel";

        // Mostrar resultado atualizado
        cout << "\nStatus atualizado:\n";
        for (int i = 0; i < 6; i++) {
            cout << horas[i] << ": " << agenda[indice_mes][indice_dia][i] << "\n";
        }

        // Grava tudo no arquivo
        salvar_em_arquivo();
        cout << "\nAlterações salvas em 'agenda.txt' ✅\n";
    }
};

// ===========================================================
// PROGRAMA PRINCIPAL
// ===========================================================
int main() {
    int mes, dia;

    Agenda quinze;
    quinze.carregar_de_arquivo(); // agora carrega o arquivo existente

    cout << "Digite o mês que deseja ver (1 a 12): ";
    cin >> mes;
    cout << "Digite o dia que deseja ver (1 a 30): ";
    cin >> dia;

    quinze.horarios(mes, dia);

    return 0;
}
